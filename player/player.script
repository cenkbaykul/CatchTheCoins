local defmath = require"defmath.defmath"
local helper = require "main.helper"

local screensize = helper.get_screensize()
local move_speed = 400

local function play_animation(self, animation)
	if self.current_animation ~= animation then
		self.current_animation = animation
		msg.post("#sprite", "play_animation", { id = animation })
	end
end

function blink_anim()
	local counter = 0
	repeat
		go.animate("#sprite", "tint", go.PLAYBACK_ONCE_PINGPONG, vmath.vector4(1, 1, 1, 0,1), go.EASING_OUTSINE, 0.2,0,	function() return counter + 1 end)
	until counter < 2
end

function init(self)
	msg.post(".", "acquire_input_focus")
	self.velocity = vmath.vector3()
	self.actions = {}
	self.current_animation = nil
	go.animate("#sprite", "tint", go.PLAYBACK_ONCE_PINGPONG, vmath.vector4(1, 1, 1, 0,1), go.EASING_OUTSINE, 0.5, 0.0, blink_anim)
end

function final(self) msg.post(".", "release_input_focus") end

function update(self, dt)
	self.velocity = vmath.vector3()
	if self.actions[hash("left")] then self.velocity.x = -1 end
	if self.actions[hash("right")] then self.velocity.x = 1 end
	if self.actions[hash("up")] then self.velocity.y = 1 end
	if self.actions[hash("down")] then self.velocity.y = -1 end

	if vmath.length(self.velocity) > 0 then
		local vel = vmath.normalize(self.velocity)
		self.velocity = vel * move_speed
	end

	local pos = go.get_position()
	pos = pos + self.velocity * dt
	pos.x = defmath.clamp(pos.x, 0, screensize.x)
	pos.y = defmath.clamp(pos.y, 0, screensize.y)

	-- animation
	if self.velocity.x ~= 0 then
		play_animation(self, hash("player_right"))
		sprite.set_hflip("#sprite", self.velocity.x < 0)
		sprite.set_vflip("#sprite", false)
	elseif math.abs(self.velocity.y) > 0 then
		play_animation(self, hash("player_up"))
		sprite.set_vflip("#sprite", self.velocity.y < 0)
	end

	go.set_position(pos)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("collision_response") then
		if message.group == hash("enemy") then
			msg.post("/game_manager#game_manager", "game_over")
			go.delete()
		end
	end
end

function on_input(self, action_id, action)
	if action_id then
		if action.pressed then self.actions[action_id] = true
		elseif action.released then self.actions[action_id] = nil end
	end
end
